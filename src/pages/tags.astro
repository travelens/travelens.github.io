---
import { Image } from 'astro:assets'
import { Layout, Header, Footer } from 'astro-travelens'
import Document from '../data/document'
import Cover from '../assets/dominik-schroder-FIKD9t5_5zQ-unsplash.jpg'

const documents = import.meta.glob<Document[]>('../data/*.json', { import: 'default', eager: true })
const tags = Object.keys(documents).map(doc => documents[doc].map(entry => entry.tags)).flat(3).sort()
const tagcount = tags.reduce((acc: Record<string, number>, curr) => {
  acc[curr] = (acc[curr] || 0) + 1;
  return acc;
}, {})

const colors = [
  'red',
  'yellow',
  'green',
  'blue',
  'indigo',
  'purple',
  'pink'
]

const textSize = [
  'text-xs',
  'text-sm',
  'text-base',
  'text-lg',
  'text-xl',
  'text-2xl',
  'text-3xl',
  'text-4xl',
  'text-5xl',
]
const maxcount = tagcount[Object.keys(tagcount).reduce((a, b) => tagcount[a] > tagcount[b] ? a : b)]
---
<Layout title="Tags">
  <Header />
  <div class="-mt-24 relative w-full h-screen py-12 px-12 bg-black">
		<!-- hero section -->
		<div class="relative z-10 text-center">
			<h1 class="text-white text-center text-6xl font-display font-bold mt-12 mb-12">Tags</h1>
      <ul class="flex justify-center flex-wrap align-center gap-2 leading-8">
        {Object.keys(tagcount).map(tag =>
          <li><a href={"/tag/" + encodeURIComponent(tag)} class:list={[
            "text-black p-1 hover:py-2 shadow-lg shadow-neutral-500 rounded-full",
            "bg-" + colors[Math.floor(Math.random() * colors.length)] + "-" + (Math.floor(Math.random() * 3) + 1) + "00",
            textSize[Math.floor(tagcount[tag] * textSize.length / maxcount)],
            textSize[Math.floor(tagcount[tag] * textSize.length / maxcount)],
            ]}>#{tag}</a></li>
        )}
      </ul>
		</div>

		<!-- banner image -->
		<Image src={Cover} class="w-full absolute inset-0 object-cover opacity-70" alt="Cover" />
	</div>
  <Footer />
</Layout>