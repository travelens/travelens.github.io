---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import Place from '../../layouts/Place.astro'
import Document from '../../data/document'
import Documents from '../../components/Documents.astro'

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const places = await getCollection('place')
  return places.map(place => ({
    params: { slug: place.slug }, props: { place },
  }))
}

// 2. When it's time to render, you can get the entry directly from the prop
export interface Props {
  place: CollectionEntry<"place">
}
const { place } = Astro.props
const documents = import.meta.glob<Document>('../../data/*.json', { import: 'default', eager: true })
const trips = Object.keys(documents).map(doc => documents[doc])
  .flat(3)
  .filter(doc => doc.place === place.data.title && doc.collection === 'trip')
  .sort((a,b) => +(new Date(b.date)) - +(new Date(a.date)))
const { Content } = await place.render();
---
<Place place={place}>
  <div class="max-w-4xl mx-auto bg-white pb-6 mb-6 px-12 lg:px-24 relative z-10">
    <div class="prose prose-sm sm:prose lg:prose-lg pt-6">
      <Content />
    </div>
  </div>
  <Documents documents={trips} />
</Place>